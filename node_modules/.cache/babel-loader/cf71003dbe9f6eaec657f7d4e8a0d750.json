{"ast":null,"code":"var _jsxFileName = \"D:\\\\heavy reacts\\\\react\\\\todo\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import Data from './data'\nimport './App.css';\nimport Sidebar from './components/Sidebar';\nimport Sidedivide from './components/Sidedivide';\nimport Navbar from './components/Navbar';\nimport Main from './components/Main';\nimport React from 'react';\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  // const [todos,setTodos]=React.useState([{\n  //   id:\"\",\n  //   task:\"\",\n  //   isDone:false\n  // }\n  // ]) \n  //  function Addtask(userinput){\n  //   setTodos(todos=>{\n  //     return todos.map((todo)=>{\n  //       return {task:userinput,id:nanoid()}\n  //     })\n  //   })\n  //  }\n  // function Addtask(userinput){\n  //   setTodos(todos=>{\n  //    return todos[0].id===\"\"?[{id:nanoid(),task:userinput,isDone:false}]:[...todos,{id:nanoid(),task:userinput,isDone:true}]\n  //   })\n  // }\n  const [todos, setTodos] = React.useState([]);\n\n  function newtask(userinput) {\n    return {\n      id: nanoid(),\n      task: userinput,\n      isDone: false\n    };\n  }\n\n  function Addtask(userinput) {\n    setTodos(todos => [...todos], todos.push(newtask(userinput)));\n    userinput = \"\";\n  }\n\n  function toggle(id) {\n    setTodos(todos => todos.map(todo => {\n      return todo.id === id ? { ...todo,\n        isDone: !todo.isDone\n      } : todo;\n    }));\n  }\n\n  function remove(id) {\n    setTodos(todos => todos.filter(todo => {\n      return todo.id !== id && todo;\n    }));\n  }\n\n  function clicked(id) {\n    console.log;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidedivide, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      todo: todos,\n      Addtask: Addtask,\n      toggle: toggle,\n      remove: remove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"uu1hS44ImpqtDP84/kJI6RehsRs=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Sidebar","Sidedivide","Navbar","Main","React","nanoid","App","todos","setTodos","useState","newtask","userinput","id","task","isDone","Addtask","push","toggle","map","todo","remove","filter","clicked","console","log"],"sources":["D:/heavy reacts/react/todo/src/App.js"],"sourcesContent":["// import Data from './data'\nimport './App.css';\nimport Sidebar from './components/Sidebar'\nimport Sidedivide from './components/Sidedivide'\nimport Navbar from './components/Navbar'\nimport Main from './components/Main'\nimport React from 'react'\nimport {nanoid} from \"nanoid\"\nexport default function App() {\n  // const [todos,setTodos]=React.useState([{\n  //   id:\"\",\n  //   task:\"\",\n  //   isDone:false\n  // }\n  // ]) \n//  function Addtask(userinput){\n//   setTodos(todos=>{\n//     return todos.map((todo)=>{\n//       return {task:userinput,id:nanoid()}\n//     })\n//   })\n \n//  }\n// function Addtask(userinput){\n//   setTodos(todos=>{\n//    return todos[0].id===\"\"?[{id:nanoid(),task:userinput,isDone:false}]:[...todos,{id:nanoid(),task:userinput,isDone:true}]\n//   })\n// }\nconst [todos,setTodos]=React.useState([]) \n\n  function newtask(userinput){\n    return {id:nanoid(),task:userinput,isDone:false}\n  }\n   function Addtask(userinput){\n    setTodos(todos=>[...todos],todos.push(newtask(userinput)));\n    userinput=\"\"\n   }\n  function toggle(id){\n    setTodos(todos=>todos.map((todo)=>{\n      return todo.id===id ?{...todo,isDone:!todo.isDone}:todo\n    }))\n  }\n  function remove (id){\n    setTodos(todos=>todos.filter((todo)=>{\n      return todo.id!==id && todo\n    }))\n  }\n  function clicked(id){\n    console.log\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Sidebar/>\n      <Sidedivide/>\n      <Main  todo={todos} Addtask={Addtask} toggle={toggle} remove={remove} />\n    </div>\n  );\n}\n\n"],"mappings":";;;AAAA;AACA,OAAO,WAAP;AACA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,QAArB;;AACA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAC5B;EACA;EACA;EACA;EACA;EACA;EACF;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAAvB;;EAEE,SAASC,OAAT,CAAiBC,SAAjB,EAA2B;IACzB,OAAO;MAACC,EAAE,EAACP,MAAM,EAAV;MAAaQ,IAAI,EAACF,SAAlB;MAA4BG,MAAM,EAAC;IAAnC,CAAP;EACD;;EACA,SAASC,OAAT,CAAiBJ,SAAjB,EAA2B;IAC1BH,QAAQ,CAACD,KAAK,IAAE,CAAC,GAAGA,KAAJ,CAAR,EAAmBA,KAAK,CAACS,IAAN,CAAWN,OAAO,CAACC,SAAD,CAAlB,CAAnB,CAAR;IACAA,SAAS,GAAC,EAAV;EACA;;EACF,SAASM,MAAT,CAAgBL,EAAhB,EAAmB;IACjBJ,QAAQ,CAACD,KAAK,IAAEA,KAAK,CAACW,GAAN,CAAWC,IAAD,IAAQ;MAChC,OAAOA,IAAI,CAACP,EAAL,KAAUA,EAAV,GAAc,EAAC,GAAGO,IAAJ;QAASL,MAAM,EAAC,CAACK,IAAI,CAACL;MAAtB,CAAd,GAA4CK,IAAnD;IACD,CAFe,CAAR,CAAR;EAGD;;EACD,SAASC,MAAT,CAAiBR,EAAjB,EAAoB;IAClBJ,QAAQ,CAACD,KAAK,IAAEA,KAAK,CAACc,MAAN,CAAcF,IAAD,IAAQ;MACnC,OAAOA,IAAI,CAACP,EAAL,KAAUA,EAAV,IAAgBO,IAAvB;IACD,CAFe,CAAR,CAAR;EAGD;;EACD,SAASG,OAAT,CAAiBV,EAAjB,EAAoB;IAClBW,OAAO,CAACC,GAAR;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,IAAD;MAAO,IAAI,EAAEjB,KAAb;MAAoB,OAAO,EAAEQ,OAA7B;MAAsC,MAAM,EAAEE,MAA9C;MAAsD,MAAM,EAAEG;IAA9D;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GAnDuBd,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}